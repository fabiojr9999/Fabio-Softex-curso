#LISTA 1

class Node:
  
  def __init__(self, data):
    self.data = data
    self.left = None
    self.right = None

  def __str__(self):
    return str(self.data)

class BinaryTree:

  def __init__(self, data):
    node = Node(data)
    self.root = node

  def simetric_traversal(self, node=None):
    if node is None:
      node = self.root
    if node.left:
      self.simetric_traversal(node.left)
    print(node)
    if node.right:
      self.simetric_traversal(node.right)

if __name__ == "__main__":
  
  tree = BinaryTree(None)
  n1 = Node("")
  n2 = Node(45)
  n3 = Node(20)
  n4 = Node(7)
  n5 = Node(8)
  n6 = Node(4)
  n7 = Node(30)
  n8 = Node(60)
  n9 = Node(81)
  n10 = Node(97)
  n11 = Node(100)

  n2.left = n3
  n3.left = n4
  n4.left = n5
  n3.right = n6
  n2.right = n7
  n7.right = n8
  n8.right = n9
  n9.right = n10
  n10.right = n11
   
  tree.root = n2
  tree.simetric_traversal()
  print(tree)